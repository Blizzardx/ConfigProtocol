// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FieldType int32

const (
	FieldType_typeInt32   FieldType = 0
	FieldType_typeInt64   FieldType = 1
	FieldType_typeFloat32 FieldType = 2
	FieldType_typeFloat64 FieldType = 3
	FieldType_typeBool    FieldType = 4
	FieldType_typeString  FieldType = 5
	FieldType_typeClass   FieldType = 6
)

var FieldType_name = map[int32]string{
	0: "typeInt32",
	1: "typeInt64",
	2: "typeFloat32",
	3: "typeFloat64",
	4: "typeBool",
	5: "typeString",
	6: "typeClass",
}
var FieldType_value = map[string]int32{
	"typeInt32":   0,
	"typeInt64":   1,
	"typeFloat32": 2,
	"typeFloat64": 3,
	"typeBool":    4,
	"typeString":  5,
	"typeClass":   6,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}
func (FieldType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type ConfigType int32

const (
	ConfigType_typeList ConfigType = 0
	ConfigType_typeMap  ConfigType = 1
)

var ConfigType_name = map[int32]string{
	0: "typeList",
	1: "typeMap",
}
var ConfigType_value = map[string]int32{
	"typeList": 0,
	"typeMap":  1,
}

func (x ConfigType) String() string {
	return proto.EnumName(ConfigType_name, int32(x))
}
func (ConfigType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type ConfigLine struct {
	Content []string `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
}

func (m *ConfigLine) Reset()                    { *m = ConfigLine{} }
func (m *ConfigLine) String() string            { return proto.CompactTextString(m) }
func (*ConfigLine) ProtoMessage()               {}
func (*ConfigLine) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ConfigLine) GetContent() []string {
	if m != nil {
		return m.Content
	}
	return nil
}

type ConfigContent struct {
	Content []*ConfigLine `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
}

func (m *ConfigContent) Reset()                    { *m = ConfigContent{} }
func (m *ConfigContent) String() string            { return proto.CompactTextString(m) }
func (*ConfigContent) ProtoMessage()               {}
func (*ConfigContent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ConfigContent) GetContent() []*ConfigLine {
	if m != nil {
		return m.Content
	}
	return nil
}

type ConfigFieldInfo struct {
	Name   string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type   FieldType `protobuf:"varint,2,opt,name=type,enum=config.FieldType" json:"type,omitempty"`
	IsList bool      `protobuf:"varint,3,opt,name=isList" json:"isList,omitempty"`
}

func (m *ConfigFieldInfo) Reset()                    { *m = ConfigFieldInfo{} }
func (m *ConfigFieldInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigFieldInfo) ProtoMessage()               {}
func (*ConfigFieldInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ConfigFieldInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigFieldInfo) GetType() FieldType {
	if m != nil {
		return m.Type
	}
	return FieldType_typeInt32
}

func (m *ConfigFieldInfo) GetIsList() bool {
	if m != nil {
		return m.IsList
	}
	return false
}

type ConfigEnumElementInfo struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ConfigEnumElementInfo) Reset()                    { *m = ConfigEnumElementInfo{} }
func (m *ConfigEnumElementInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigEnumElementInfo) ProtoMessage()               {}
func (*ConfigEnumElementInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ConfigEnumElementInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigEnumElementInfo) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ConfigEnumInfo struct {
	Name  string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value []*ConfigEnumElementInfo `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
}

func (m *ConfigEnumInfo) Reset()                    { *m = ConfigEnumInfo{} }
func (m *ConfigEnumInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigEnumInfo) ProtoMessage()               {}
func (*ConfigEnumInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ConfigEnumInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigEnumInfo) GetValue() []*ConfigEnumElementInfo {
	if m != nil {
		return m.Value
	}
	return nil
}

type ConfigTable struct {
	Type          ConfigType         `protobuf:"varint,1,opt,name=type,enum=config.ConfigType" json:"type,omitempty"`
	KeyFieldName  string             `protobuf:"bytes,2,opt,name=keyFieldName" json:"keyFieldName,omitempty"`
	FieldInfoList []*ConfigFieldInfo `protobuf:"bytes,3,rep,name=fieldInfoList" json:"fieldInfoList,omitempty"`
	EnumInfoList  []*ConfigEnumInfo  `protobuf:"bytes,4,rep,name=enumInfoList" json:"enumInfoList,omitempty"`
	Content       []*ConfigLine      `protobuf:"bytes,5,rep,name=content" json:"content,omitempty"`
}

func (m *ConfigTable) Reset()                    { *m = ConfigTable{} }
func (m *ConfigTable) String() string            { return proto.CompactTextString(m) }
func (*ConfigTable) ProtoMessage()               {}
func (*ConfigTable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ConfigTable) GetType() ConfigType {
	if m != nil {
		return m.Type
	}
	return ConfigType_typeList
}

func (m *ConfigTable) GetKeyFieldName() string {
	if m != nil {
		return m.KeyFieldName
	}
	return ""
}

func (m *ConfigTable) GetFieldInfoList() []*ConfigFieldInfo {
	if m != nil {
		return m.FieldInfoList
	}
	return nil
}

func (m *ConfigTable) GetEnumInfoList() []*ConfigEnumInfo {
	if m != nil {
		return m.EnumInfoList
	}
	return nil
}

func (m *ConfigTable) GetContent() []*ConfigLine {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterType((*ConfigLine)(nil), "config.ConfigLine")
	proto.RegisterType((*ConfigContent)(nil), "config.ConfigContent")
	proto.RegisterType((*ConfigFieldInfo)(nil), "config.ConfigFieldInfo")
	proto.RegisterType((*ConfigEnumElementInfo)(nil), "config.ConfigEnumElementInfo")
	proto.RegisterType((*ConfigEnumInfo)(nil), "config.ConfigEnumInfo")
	proto.RegisterType((*ConfigTable)(nil), "config.ConfigTable")
	proto.RegisterEnum("config.FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("config.ConfigType", ConfigType_name, ConfigType_value)
}

func init() { proto.RegisterFile("config.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x41, 0x6b, 0xdb, 0x30,
	0x14, 0xae, 0x1c, 0xdb, 0xad, 0x9f, 0x9d, 0x54, 0x7b, 0x6c, 0x9d, 0x2f, 0x03, 0x63, 0x58, 0x67,
	0xca, 0xe8, 0x21, 0x29, 0x3d, 0x0c, 0x7a, 0xd8, 0x42, 0x0b, 0x81, 0x6c, 0x07, 0x2f, 0x97, 0x1d,
	0x9d, 0x44, 0x09, 0x66, 0x8e, 0x64, 0x62, 0x65, 0x2c, 0xd7, 0xfd, 0xf2, 0x21, 0xc9, 0x8e, 0xe3,
	0x8c, 0xb0, 0x9b, 0xbe, 0xa7, 0xf7, 0x7d, 0x9f, 0xbe, 0xe7, 0x67, 0x08, 0x16, 0x82, 0xaf, 0xf2,
	0xf5, 0x7d, 0xb9, 0x15, 0x52, 0xa0, 0x6b, 0x50, 0x7c, 0x0b, 0x30, 0xd6, 0xa7, 0x69, 0xce, 0x19,
	0x86, 0x70, 0xb9, 0x10, 0x5c, 0x32, 0x2e, 0x43, 0x12, 0xf5, 0x12, 0x2f, 0x6d, 0x60, 0xfc, 0x04,
	0x7d, 0xd3, 0x37, 0x36, 0x05, 0xfc, 0xd8, 0x6d, 0xf5, 0x87, 0x78, 0x5f, 0x1b, 0xb4, 0x7a, 0x2d,
	0x7d, 0x09, 0xd7, 0xa6, 0xfc, 0x92, 0xb3, 0x62, 0x39, 0xe1, 0x2b, 0x81, 0x08, 0x36, 0xcf, 0x36,
	0x2c, 0x24, 0x11, 0x49, 0xbc, 0x54, 0x9f, 0xf1, 0x3d, 0xd8, 0x72, 0x5f, 0xb2, 0xd0, 0x8a, 0x48,
	0x32, 0x18, 0xbe, 0x6a, 0x14, 0x35, 0x69, 0xb6, 0x2f, 0x59, 0xaa, 0xaf, 0xf1, 0x06, 0xdc, 0xbc,
	0x9a, 0xe6, 0x95, 0x0c, 0x7b, 0x11, 0x49, 0xae, 0xd2, 0x1a, 0xc5, 0x9f, 0xe1, 0x8d, 0x71, 0x79,
	0xe6, 0xbb, 0xcd, 0x73, 0xc1, 0x36, 0x8c, 0xcb, 0xb3, 0x5e, 0xaf, 0xc1, 0xf9, 0x95, 0x15, 0x3b,
	0x63, 0xe6, 0xa4, 0x06, 0xc4, 0x3f, 0x60, 0xd0, 0x4a, 0x9c, 0xe5, 0x8e, 0x5a, 0xae, 0x8a, 0xfe,
	0xae, 0x1b, 0xfd, 0xc4, 0xbd, 0x91, 0xfe, 0x63, 0x81, 0x6f, 0x1a, 0x66, 0xd9, 0xbc, 0x60, 0x78,
	0x5b, 0x87, 0x25, 0x3a, 0xec, 0xc9, 0xf8, 0x8e, 0xd2, 0xc6, 0x10, 0xfc, 0x64, 0x7b, 0x3d, 0x83,
	0x6f, 0xea, 0x21, 0x96, 0x7e, 0x48, 0xa7, 0x86, 0x4f, 0xd0, 0x5f, 0x35, 0x93, 0xad, 0x07, 0xa3,
	0x1e, 0xf6, 0xb6, 0x2b, 0x7a, 0x18, 0x7e, 0xda, 0xed, 0xc6, 0x4f, 0x10, 0xb0, 0x3a, 0xaf, 0x66,
	0xdb, 0x9a, 0x7d, 0xf3, 0x6f, 0x2c, 0x4d, 0xee, 0xf4, 0x1e, 0x2f, 0x82, 0xf3, 0xdf, 0x45, 0xb8,
	0xfb, 0x0d, 0xde, 0xe1, 0x6b, 0x62, 0x1f, 0x3c, 0x95, 0x70, 0xc2, 0xe5, 0x68, 0x48, 0x2f, 0x8e,
	0xe0, 0xe3, 0x03, 0x25, 0x78, 0x0d, 0xbe, 0x82, 0x2f, 0x85, 0xc8, 0xd4, 0xbd, 0xd5, 0x29, 0x3c,
	0x3e, 0xd0, 0x1e, 0x06, 0x70, 0xa5, 0x0a, 0x5f, 0x84, 0x28, 0xa8, 0x8d, 0x03, 0x00, 0x85, 0xbe,
	0xcb, 0x6d, 0xce, 0xd7, 0xd4, 0x69, 0xe4, 0xc6, 0x45, 0x56, 0x55, 0xd4, 0xbd, 0xfb, 0xd0, 0x6c,
	0xba, 0xb6, 0xae, 0xa9, 0x2a, 0x01, 0xbd, 0x40, 0x1f, 0x2e, 0x15, 0xfa, 0x9a, 0x95, 0x94, 0xcc,
	0x5d, 0xfd, 0x87, 0x8c, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x69, 0x12, 0x09, 0x64, 0x31, 0x03,
	0x00, 0x00,
}
