// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	config.proto

It has these top-level messages:
	ConfigLine
	ConfigContent
	ConfigFieldInfo
	ConfigEnumElementInfo
	ConfigEnumInfo
	ConfigTable
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FieldType int32

const (
	FieldType_typeInt32    FieldType = 0
	FieldType_typeInt64    FieldType = 1
	FieldType_typeFloat32  FieldType = 2
	FieldType_typeFloat64  FieldType = 3
	FieldType_typeBool     FieldType = 4
	FieldType_typeString   FieldType = 5
	FieldType_typeClass    FieldType = 6
	FieldType_typeEnum     FieldType = 7
	FieldType_typeDateTime FieldType = 8
	FieldType_typeColor    FieldType = 9
)

var FieldType_name = map[int32]string{
	0: "typeInt32",
	1: "typeInt64",
	2: "typeFloat32",
	3: "typeFloat64",
	4: "typeBool",
	5: "typeString",
	6: "typeClass",
	7: "typeEnum",
	8: "typeDateTime",
	9: "typeColor",
}
var FieldType_value = map[string]int32{
	"typeInt32":    0,
	"typeInt64":    1,
	"typeFloat32":  2,
	"typeFloat64":  3,
	"typeBool":     4,
	"typeString":   5,
	"typeClass":    6,
	"typeEnum":     7,
	"typeDateTime": 8,
	"typeColor":    9,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}
func (FieldType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ConfigType int32

const (
	ConfigType_typeList ConfigType = 0
	ConfigType_typeMap  ConfigType = 1
)

var ConfigType_name = map[int32]string{
	0: "typeList",
	1: "typeMap",
}
var ConfigType_value = map[string]int32{
	"typeList": 0,
	"typeMap":  1,
}

func (x ConfigType) String() string {
	return proto.EnumName(ConfigType_name, int32(x))
}
func (ConfigType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ConfigLine struct {
	Content []string `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
}

func (m *ConfigLine) Reset()                    { *m = ConfigLine{} }
func (m *ConfigLine) String() string            { return proto.CompactTextString(m) }
func (*ConfigLine) ProtoMessage()               {}
func (*ConfigLine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConfigLine) GetContent() []string {
	if m != nil {
		return m.Content
	}
	return nil
}

type ConfigContent struct {
	Content []*ConfigLine `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
}

func (m *ConfigContent) Reset()                    { *m = ConfigContent{} }
func (m *ConfigContent) String() string            { return proto.CompactTextString(m) }
func (*ConfigContent) ProtoMessage()               {}
func (*ConfigContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConfigContent) GetContent() []*ConfigLine {
	if m != nil {
		return m.Content
	}
	return nil
}

type ConfigFieldInfo struct {
	Name      string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type      FieldType `protobuf:"varint,2,opt,name=type,enum=config.FieldType" json:"type,omitempty"`
	IsList    bool      `protobuf:"varint,3,opt,name=isList" json:"isList,omitempty"`
	Parameter string    `protobuf:"bytes,4,opt,name=parameter" json:"parameter,omitempty"`
}

func (m *ConfigFieldInfo) Reset()                    { *m = ConfigFieldInfo{} }
func (m *ConfigFieldInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigFieldInfo) ProtoMessage()               {}
func (*ConfigFieldInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ConfigFieldInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigFieldInfo) GetType() FieldType {
	if m != nil {
		return m.Type
	}
	return FieldType_typeInt32
}

func (m *ConfigFieldInfo) GetIsList() bool {
	if m != nil {
		return m.IsList
	}
	return false
}

func (m *ConfigFieldInfo) GetParameter() string {
	if m != nil {
		return m.Parameter
	}
	return ""
}

type ConfigEnumElementInfo struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ConfigEnumElementInfo) Reset()                    { *m = ConfigEnumElementInfo{} }
func (m *ConfigEnumElementInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigEnumElementInfo) ProtoMessage()               {}
func (*ConfigEnumElementInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ConfigEnumElementInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigEnumElementInfo) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ConfigEnumInfo struct {
	Name  string                   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value []*ConfigEnumElementInfo `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
}

func (m *ConfigEnumInfo) Reset()                    { *m = ConfigEnumInfo{} }
func (m *ConfigEnumInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigEnumInfo) ProtoMessage()               {}
func (*ConfigEnumInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ConfigEnumInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigEnumInfo) GetValue() []*ConfigEnumElementInfo {
	if m != nil {
		return m.Value
	}
	return nil
}

type ConfigTable struct {
	Type          ConfigType         `protobuf:"varint,1,opt,name=type,enum=config.ConfigType" json:"type,omitempty"`
	KeyFieldName  string             `protobuf:"bytes,2,opt,name=keyFieldName" json:"keyFieldName,omitempty"`
	FieldInfoList []*ConfigFieldInfo `protobuf:"bytes,3,rep,name=fieldInfoList" json:"fieldInfoList,omitempty"`
	EnumInfoList  []*ConfigEnumInfo  `protobuf:"bytes,4,rep,name=enumInfoList" json:"enumInfoList,omitempty"`
	Content       []*ConfigLine      `protobuf:"bytes,5,rep,name=content" json:"content,omitempty"`
	PackageName   string             `protobuf:"bytes,6,opt,name=packageName" json:"packageName,omitempty"`
	ConfigName    string             `protobuf:"bytes,7,opt,name=configName" json:"configName,omitempty"`
}

func (m *ConfigTable) Reset()                    { *m = ConfigTable{} }
func (m *ConfigTable) String() string            { return proto.CompactTextString(m) }
func (*ConfigTable) ProtoMessage()               {}
func (*ConfigTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ConfigTable) GetType() ConfigType {
	if m != nil {
		return m.Type
	}
	return ConfigType_typeList
}

func (m *ConfigTable) GetKeyFieldName() string {
	if m != nil {
		return m.KeyFieldName
	}
	return ""
}

func (m *ConfigTable) GetFieldInfoList() []*ConfigFieldInfo {
	if m != nil {
		return m.FieldInfoList
	}
	return nil
}

func (m *ConfigTable) GetEnumInfoList() []*ConfigEnumInfo {
	if m != nil {
		return m.EnumInfoList
	}
	return nil
}

func (m *ConfigTable) GetContent() []*ConfigLine {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ConfigTable) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *ConfigTable) GetConfigName() string {
	if m != nil {
		return m.ConfigName
	}
	return ""
}

func init() {
	proto.RegisterType((*ConfigLine)(nil), "config.ConfigLine")
	proto.RegisterType((*ConfigContent)(nil), "config.ConfigContent")
	proto.RegisterType((*ConfigFieldInfo)(nil), "config.ConfigFieldInfo")
	proto.RegisterType((*ConfigEnumElementInfo)(nil), "config.ConfigEnumElementInfo")
	proto.RegisterType((*ConfigEnumInfo)(nil), "config.ConfigEnumInfo")
	proto.RegisterType((*ConfigTable)(nil), "config.ConfigTable")
	proto.RegisterEnum("config.FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("config.ConfigType", ConfigType_name, ConfigType_value)
}

func init() { proto.RegisterFile("config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x14, 0xec, 0x26, 0x8e, 0x13, 0x3f, 0x3b, 0xe9, 0xf2, 0x04, 0xc5, 0x07, 0x40, 0x96, 0x25, 0x4a,
	0x54, 0xa1, 0x1e, 0x92, 0xaa, 0x07, 0xa4, 0x1e, 0x20, 0xb4, 0x52, 0xa5, 0xc2, 0xc1, 0xe4, 0xc2,
	0x71, 0x1b, 0x36, 0x91, 0x55, 0x7b, 0xd7, 0x72, 0xb6, 0x48, 0xb9, 0xf2, 0x33, 0xfc, 0x08, 0x1f,
	0x86, 0x76, 0xd7, 0x8e, 0xed, 0xa2, 0x88, 0x9b, 0x67, 0x3c, 0xf3, 0x3c, 0x6f, 0xbc, 0x0b, 0xc1,
	0x4a, 0x8a, 0x75, 0xba, 0x39, 0x2f, 0x4a, 0xa9, 0x24, 0xba, 0x16, 0xc5, 0xa7, 0x00, 0x0b, 0xf3,
	0x74, 0x97, 0x0a, 0x8e, 0x21, 0x0c, 0x57, 0x52, 0x28, 0x2e, 0x54, 0x48, 0xa2, 0xfe, 0xd4, 0x4b,
	0x6a, 0x18, 0x5f, 0xc1, 0xd8, 0xea, 0x16, 0x96, 0xc0, 0xf7, 0x5d, 0xa9, 0x3f, 0xc3, 0xf3, 0xea,
	0x03, 0xcd, 0xbc, 0xc6, 0xfe, 0x8b, 0xc0, 0xb1, 0xe5, 0x6f, 0x52, 0x9e, 0xfd, 0xb8, 0x15, 0x6b,
	0x89, 0x08, 0x8e, 0x60, 0x39, 0x0f, 0x49, 0x44, 0xa6, 0x5e, 0x62, 0x9e, 0xf1, 0x2d, 0x38, 0x6a,
	0x57, 0xf0, 0xb0, 0x17, 0x91, 0xe9, 0x64, 0xf6, 0xac, 0x1e, 0x69, 0x4c, 0xcb, 0x5d, 0xc1, 0x13,
	0xf3, 0x1a, 0x4f, 0xc0, 0x4d, 0xb7, 0x77, 0xe9, 0x56, 0x85, 0xfd, 0x88, 0x4c, 0x47, 0x49, 0x85,
	0xf0, 0x15, 0x78, 0x05, 0x2b, 0x59, 0xce, 0x15, 0x2f, 0x43, 0xc7, 0xcc, 0x6d, 0x88, 0xf8, 0x23,
	0xbc, 0xb0, 0x19, 0xae, 0xc5, 0x63, 0x7e, 0x9d, 0xf1, 0x9c, 0x0b, 0x75, 0x30, 0xc9, 0x73, 0x18,
	0xfc, 0x64, 0xd9, 0xa3, 0x8d, 0x32, 0x48, 0x2c, 0x88, 0xbf, 0xc3, 0xa4, 0x19, 0x71, 0xd0, 0x3b,
	0x6f, 0xbc, 0xba, 0x99, 0xd7, 0xdd, 0x66, 0x9e, 0x7c, 0xbd, 0x1e, 0xfd, 0xa7, 0x07, 0xbe, 0x15,
	0x2c, 0xd9, 0x7d, 0xc6, 0xf1, 0xb4, 0xaa, 0x82, 0x98, 0x2a, 0x9e, 0xb4, 0xdb, 0xea, 0x22, 0x86,
	0xe0, 0x81, 0xef, 0x4c, 0x43, 0x5f, 0x75, 0x90, 0x9e, 0x09, 0xd2, 0xe1, 0xf0, 0x0a, 0xc6, 0xeb,
	0xba, 0xf7, 0xaa, 0x36, 0x1d, 0xec, 0x65, 0x77, 0xe8, 0xfe, 0xd7, 0x24, 0x5d, 0x35, 0x7e, 0x80,
	0x80, 0x57, 0xfb, 0x1a, 0xb7, 0x63, 0xdc, 0x27, 0xff, 0xae, 0x65, 0xcc, 0x1d, 0x6d, 0xfb, 0x9c,
	0x0c, 0xfe, 0x7b, 0x4e, 0x30, 0x02, 0xbf, 0x60, 0xab, 0x07, 0xb6, 0xe1, 0x66, 0x17, 0xd7, 0xec,
	0xd2, 0xa6, 0xf0, 0x0d, 0x80, 0xf5, 0x1b, 0xc1, 0xd0, 0x08, 0x5a, 0xcc, 0xd9, 0x6f, 0x02, 0xde,
	0xfe, 0xb8, 0xe0, 0x18, 0x3c, 0x5d, 0xd2, 0xad, 0x50, 0xf3, 0x19, 0x3d, 0x6a, 0xc1, 0xcb, 0x0b,
	0x4a, 0xf0, 0x18, 0x7c, 0x0d, 0x6f, 0x32, 0xc9, 0xf4, 0xfb, 0x5e, 0x87, 0xb8, 0xbc, 0xa0, 0x7d,
	0x0c, 0x60, 0xa4, 0x89, 0x4f, 0x52, 0x66, 0xd4, 0xc1, 0x09, 0x80, 0x46, 0xdf, 0x54, 0x99, 0x8a,
	0x0d, 0x1d, 0xd4, 0xe3, 0x16, 0x19, 0xdb, 0x6e, 0xa9, 0x5b, 0x8b, 0x75, 0x11, 0x74, 0x88, 0x14,
	0x02, 0x8d, 0x3e, 0x33, 0xc5, 0x97, 0x69, 0xce, 0xe9, 0x68, 0x2f, 0x97, 0x99, 0x2c, 0xa9, 0x77,
	0xf6, 0xae, 0xbe, 0x7a, 0x26, 0x69, 0x65, 0xd6, 0x9d, 0xd1, 0x23, 0xf4, 0x61, 0xa8, 0xd1, 0x17,
	0x56, 0x50, 0x72, 0xef, 0x9a, 0x2b, 0x3b, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xe3, 0x37,
	0x27, 0xc2, 0x03, 0x00, 0x00,
}
